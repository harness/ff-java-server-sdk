/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'application'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo1.maven.org/maven2/')
    }

    maven {
        url = uri('https://s01.oss.sonatype.org/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {

    implementation 'io.harness:ff-java-server-sdk:1.1.5.3'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'org.apache.maven:maven-model:3.3.9'
    implementation 'org.threeten:threetenbp:1.4.3'
    implementation 'io.gsonfire:gson-fire:1.7.1'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.5'
    implementation 'com.github.heremaps:oksse:0.9.0'
    implementation 'com.sangupta:murmur:1.0.0'
    implementation 'io.swagger:swagger-annotations:1.6.2'
    implementation 'org.mapdb:mapdb:3.0.8'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

group = 'io.harness.featureflags'
version = '1.0-SNAPSHOT'
description = 'GettinStarted'
java.sourceCompatibility = JavaVersion.VERSION_1_8


/* Builds fat jar with all the dependencies required to run the GettingStarted App. */
task buildGettingStarted(type: Jar) {
    mainClassName = 'io.harness.ff.examples.GettingStarted'
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
    baseName = 'ff-java-sdk-sample-demo-app'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }

    }
    //exclude manifests from other jars.
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}

task runGettingStarted(type: JavaExec) {

    description = 'Run the GettingStarted jar.'
    mainClassName = 'io.harness.ff.examples.GettingStarted'
    classpath sourceSets.main.runtimeClasspath
    main = "$mainClassName"
    if (project.hasProperty("target")) {
        args target
    }
}

