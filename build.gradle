buildscript {
    repositories { maven { url "https://repo1.maven.org/maven2" } }
    dependencies { classpath "org.openapitools:openapi-generator-gradle-plugin:4.3.1" }
}

plugins {
    id 'java'
    id 'maven-publish'
    id "org.openapi.generator" version "4.3.1"
}

apply plugin: 'java-library'
apply plugin: 'org.openapi.generator'


repositories {
    mavenLocal()
    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation 'org.apache.maven:maven-model:3.3.9'
    implementation 'org.threeten:threetenbp:1.4.3'
    implementation 'io.gsonfire:gson-fire:1.7.1'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.5'
    implementation 'com.github.heremaps:oksse:0.9.0'
    implementation 'com.sangupta:murmur:1.0.0'
    implementation 'io.swagger:swagger-annotations:1.6.2'
    implementation 'org.mapdb:mapdb:3.0.8'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'ch.qos.logback:logback-classic:1.2.10'
    testImplementation 'org.testng:testng:6.8'
    testImplementation 'org.mockito:mockito-testng:0.2.10'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}


group = 'io.harness'
version = '1.1.6-SNAPSHOT'
description = 'Harness Feature Flag Java Server SDK'
java.sourceCompatibility = JavaVersion.VERSION_1_8

compileJava {
    options.incremental = false
}


java {
    //withSourcesJar()
    //withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.named('test') {
    useTestNG()
}


task openApiGenerateClient (type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {

    generatorName = "java"
    inputSpec = "$rootDir/src/main/resources/client-v1.yaml".toString()
    outputDir = "$buildDir/generated".toString()

    templateDir = "$rootDir/template"
    apiPackage = "io.harness.cf.api"
    invokerPackage = "io.harness.cf"
    modelPackage = "io.harness.cf.model"

    generateApiDocumentation = false
    generateModelDocumentation = false
    //generateSupportingFiles = true
    generateModelTests = false
    generateApiTests = false
    typeMappings = [ "OffsetDateTime" : "Date" ]
    importMappings = [ "java.time.OffsetDateTime" : "java.util.Date" ]
    configOptions  = [
            java8: "true",
            dateLibrary : "java8",
            serializableModel : "true"
    ]
}

task openApiGenerateVersion (type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {

    generatorName = "java"
    inputSpec = "$rootDir/src/main/resources/version-v1.yaml".toString()
    outputDir = "$buildDir/generated-version".toString()

    templateDir = "$rootDir/template"
    apiPackage = "io.harness.cf.version.api"
    invokerPackage = "io.harness.cf.version"
    modelPackage = "io.harness.cf.version.model"

    generateApiDocumentation = false
    generateModelDocumentation = false
    //generateSupportingFiles = true
    generateModelTests = false
    generateApiTests = false
    typeMappings = [ "OffsetDateTime" : "Date" ]
    importMappings = [ "java.time.OffsetDateTime" : "java.util.Date" ]
    configOptions  = [
            java8: "true",
            dateLibrary : "java8",
            serializableModel : "true"
    ]
}

compileJava.dependsOn tasks.openApiGenerateClient
compileJava.dependsOn tasks.openApiGenerateVersion

sourceSets.main.java.srcDirs = [ "$buildDir/generated/src/main/java", "$buildDir/generated-version/src/main/java"]
sourceSets.test.java.srcDirs = [ "$buildDir/generated/src/main/java", "$buildDir/generated-version/src/main/java"]
